version: 1.0.{build}
skip_branch_with_pr: true
build: off

environment:
  matrix:
    - nodejs_version: "16"
    - nodejs_version: "15"
    - nodejs_version: "14"
    - nodejs_version: "13"
    - nodejs_version: "12"
    - nodejs_version: "11"
    - nodejs_version: "10"
    - nodejs_version: "9"
    - nodejs_version: "8"
    - nodejs_version: "7"
    - nodejs_version: "6"
    - nodejs_version: "5"
    - nodejs_version: "4"
    - nodejs_version: "3"
    - nodejs_version: "2"
    - nodejs_version: "1"
    - nodejs_version: "0.12"
    - nodejs_version: "0.10"
    - nodejs_version: "0.8"
    - nodejs_version: "0.6"
matrix:
  # fast_finish: true
  allow_failures:
    - nodejs_version: "8" # "Cannot read property 'resolve' of undefined" npm bug
    - nodejs_version: "5" # "Missing required argument #1" npm bug
    - nodejs_version: "0.6"

platform:
  - x86
  - x64

# Install scripts. (runs after repo cloning)
install:
 # Get the latest stable version of Node.js or io.js
 - ps: if ($env:nodejs_version -ne '0.6') { Install-Product node $env:nodejs_version $env:platform }
 - ps: Update-NodeJsInstallation (Get-NodeJsLatestBuild $env:nodejs_version) $env:platform
 - set PATH=%APPDATA%\npm;%PATH%
 - IF %nodejs_version% EQU 0.6 npm set strict-ssl false && npm -g install npm@1.3
 - IF %nodejs_version% EQU 0.8 npm set strict-ssl false && npm -g install npm@2
 - set PATH=%APPDATA%\npm;%PATH%
 #- IF %nodejs_version% NEQ 0.6 AND %nodejs_version% NEQ 0.8 npm -g install npm
 # install modules
 - npm install

# Post-install test scripts.
test_script:
 # Output useful info for debugging.
 - node --version
 - npm --version
 # run tests
 - npm run tests-only
